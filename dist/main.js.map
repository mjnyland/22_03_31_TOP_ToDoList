{"version":3,"file":"main.js","mappings":"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","sources":["webpack://22_03_31_top_todolist/./src/todo.js","webpack://22_03_31_top_todolist/./src/project.js","webpack://22_03_31_top_todolist/./src/DOMFunctions.js","webpack://22_03_31_top_todolist/./src/controller.js","webpack://22_03_31_top_todolist/./src/index.js"],"sourcesContent":["const Todo = (title, descrip, dueDate, priority) => {\n\n    return{\n        getTitle: () => title,\n        editTitle: newTitle => title = newTitle,\n    \n        getDescrip: () => descrip,\n        editDescrip: newDescrip => descrip = newDescrip,\n    \n        getDueDate: () => dueDate,\n        editDueDate: newDueDate => dueDate = newDueDate,\n    \n        getPriority: () => priority,\n        editPriority: newPriority => priority = newPriority\n    }\n}\n\nexport { Todo }","const Project = (name, todos) => {\n    \n    return {\n        getName: () => name,\n        getTodos: () => todos,\n        addTodo: (newTodo) => todos.push(newTodo)\n    }\n\n}\n\nexport { Project }","function clearHTML(el) {\n    while(el.firstChild) {\n        el.removeChild(el.firstChild)\n    }\n}\n\nfunction createNewElement(el, className, textContent){\n    const newEl = document.createElement(el, className)\n    className ? newEl.classList.add(className) : null;\n    textContent ? newEl.textContent = textContent : null;\n\n    return newEl\n}\n\nfunction displayTodo(cont, title, date, descrip){\n    const newTodo = createNewElement('DIV', 'todo');\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo')\n\n    newTodo.append(todoCheckbox, todoTitle, todoDate, todoDescrip, editLink, todoHR)\n\n    cont.append(newTodo)\n\n}\n\nfunction updateTodo(todoCont, title, date, descrip){\n    console.log('Updating todo')\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo')\n    todoCont.append(todoCheckbox, todoTitle, todoDate, todoDescrip, editLink, todoHR)\n}\n\nfunction createProjLabel(name){\n    const newProject = createNewElement('DIV', 'project');\n    const projectName = createNewElement('H3', 'project-label', name);\n\n    newProject.append(projectName)\n    newProject.classList.add(name)\n\n    return newProject;\n}\n\nfunction appendProjectLabel(cont, label){\n    cont.append(label)\n}\n\nfunction switchDisplay(el, newDisplay){\n    el.style.display = newDisplay\n}\n\nexport { clearHTML, createNewElement, displayTodo, updateTodo, appendProjectLabel, switchDisplay, createProjLabel }","import { Todo } from './todo'\nimport { Project } from './project'\nimport * as DOM from './DOMFunctions'\n\nconst Controller = (() => {\n\n    const newProjectButton = document.querySelector('.new-project-button');\n    const newProjectForm = document.querySelector('.new-project-form');\n    const addProjectButton = document.querySelector('.add-project-button');\n    const projectsCont = document.querySelector('.projects-cont');\n    const projectHeading = document.querySelector('.project-heading')\n\n    const newTodoButton = document.querySelector('.new-todo-button');\n    const addTodoButton = document.querySelector('.add-todo-button');\n    const newTodoForm = document.querySelector('.new-todo-form');\n    const todoCont = document.querySelector('.todo-cont');\n    const editTodoForm = document.querySelector('.edit-todo-form')\n\n    const projects = [Project('Inbox', [])]\n    projects[0].DOMElement = projectsCont.children[0];\n    projects[0].DOMElement.classList.add('active')\n\n    return {\n\n\n        handleProjectChangeRequest: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.classList[0] === 'project'){\n\n                    //Switching active project\n                    const activeProj = document.querySelector('.active')\n                    activeProj.classList.remove('active')\n                    const targetLabel = e.target;\n                    targetLabel.classList.add('active')\n\n                    //Finding matching project\n                    projects.forEach((project) => {\n                        if (project.DOMElement === targetLabel) {\n\n                            //Changing headline\n                            projectHeading.textContent = project.getName();\n\n                            //Clearing project's todo cont\n                            DOM.clearHTML(todoCont)\n\n                            //Gathering project's todos\n                            const projectTodos = project.getTodos()\n                            projectTodos.forEach((todo) => {\n                                DOM.displayTodo(todoCont, todo.getTitle(), todo.getDescrip(), todo.getDueDate(), todo.getPriority())\n                            })\n\n                        }\n                    })\n\n                }\n            })\n        },\n\n        handleNewProjectRequest: function(){\n            newProjectButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newProjectForm, 'block')\n            })\n        },\n\n        handleAddProjectRequest: function(){\n            addProjectButton.addEventListener('click', (e) => {\n\n                let projectName = document.getElementById(\"project-name\");\n\n                if (projectName.value === ''){\n                    alert('Project must have a name')\n                } else {\n                    const newProjectObj = Project(projectName.value, [])\n                    const projectLabel = DOM.createProjLabel(newProjectObj.getName())\n                    newProjectObj.DOMElement = projectLabel;\n                    DOM.appendProjectLabel(projectsCont, newProjectObj.DOMElement)\n                    projectName.value = '';\n                    DOM.switchDisplay(newProjectForm, 'none')\n                    projects.push(newProjectObj)\n                }\n\n            })\n        },\n        \n        handleNewTodoRequest: function(){\n            newTodoButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newTodoForm, 'block')\n            })\n        },\n\n\n        handleAddTodoRequest: function(){\n            addTodoButton.addEventListener('click', (e) => {\n                const todoTitle = document.getElementById(\"todo-title\");\n\n                if(todoTitle.value === ''){\n                    alert('todo must have a title')\n                } else {\n                    const todoDescrip = document.getElementById(\"todo-descrip\");\n                    const todoDate = document.getElementById(\"todo-date\");\n                \n                    const newTodo = Todo(todoTitle.value, todoDescrip.value, todoDate.value, '1')\n                \n                    DOM.displayTodo(todoCont, newTodo.getTitle(), newTodo.getDescrip(), newTodo.getDueDate(), newTodo.getPriority())\n                    newTodo.DOMElement = todoCont.lastChild;\n                    DOM.switchDisplay(newTodoForm, 'none')\n                    const activeProj = document.querySelector('.active')\n\n                    projects.forEach((project) => {\n                        if (project.DOMElement === activeProj){\n                            project.addTodo(newTodo)\n                        }\n                    })\n                } \n            })\n\n                //todoCont.append(newTodo)\n                newTodoForm.style.display = 'none'\n            \n        },\n\n        handleEditTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'edit-todo-link'){\n\n                    //Selecting target todo container, clearing it's HTML, and displaying edit form\n                    const targetTodoEl = e.target.parentNode\n                    DOM.clearHTML(targetTodoEl)\n                    targetTodoEl.append(editTodoForm)\n                    DOM.switchDisplay(editTodoForm, 'block')\n\n                    //Sorting through projects/todos to find target todo obj\n                    const activeProj = document.querySelector('.active')\n                    projects.forEach((project) => {\n                        if(activeProj === project.DOMElement){\n                            console.log(project)\n                            const todos = project.getTodos()\n                            todos.forEach((todo) => {\n                                console.log(todo.getTitle())\n                                if(targetTodoEl === todo.DOMElement){\n                                    editTodoForm.children[2].value = todo.getTitle()\n                                    editTodoForm.children[6].value = todo.getDescrip()\n                                    editTodoForm.children[11].value = todo.getDueDate()\n                                }\n                            })\n                        }\n                    })\n                } \n            })\n        },\n\n        handleUpdateTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'update-todo-button'){\n                    DOM.switchDisplay(editTodoForm, 'none')\n                    const targetTodoEl = e.target.parentNode.parentNode;\n                    console.log(targetTodoEl)\n                    const targetTodoEditForm = e.target.parentNode;\n\n                    const activeProj = document.querySelector('.active');\n                    projects.forEach((project) => {\n                        if(activeProj === project.DOMElement){\n                            const todos = project.getTodos()\n                            todos.forEach((todo) => {\n                                console.log(todo.DOMElement)\n                                if(targetTodoEl === todo.DOMElement){\n                                    todo.editTitle(targetTodoEditForm.children[2].value)\n                                    todo.editDescrip(targetTodoEditForm.children[6].value)\n                                    todo.editDueDate(targetTodoEditForm.children[11].value)\n\n                                    DOM.updateTodo(targetTodoEl, todo.getTitle(), todo.getDescrip(), todo.getDueDate(), todo.getPriority())\n                                } else {\n                                    console.log('could not find a matching todo')\n                                }\n                            })\n                        }\n                    })\n                } \n            })\n        }\n\n    }\n})();\n\nexport { Controller }","import { Controller } from './controller'\n\nController.handleProjectChangeRequest()\nController.handleNewProjectRequest()\nController.handleAddProjectRequest()\nController.handleNewTodoRequest()\nController.handleAddTodoRequest()\nController.handleEditTodoRequest()\nController.handleUpdateTodoRequest()"],"names":["Project","name","todos","getName","getTodos","addTodo","newTodo","push","clearHTML","el","firstChild","removeChild","createNewElement","className","textContent","newEl","document","createElement","classList","add","displayTodo","cont","title","date","descrip","todoCheckbox","type","todoTitle","todoDate","todoDescrip","todoHR","editLink","append","switchDisplay","newDisplay","style","display","Controller","newProjectButton","querySelector","newProjectForm","addProjectButton","projectsCont","projectHeading","newTodoButton","addTodoButton","newTodoForm","todoCont","editTodoForm","projects","DOMElement","children","handleProjectChangeRequest","addEventListener","e","target","remove","targetLabel","forEach","project","todo","getTitle","getDescrip","getDueDate","getPriority","handleNewProjectRequest","handleAddProjectRequest","projectName","getElementById","value","alert","newProjectObj","projectLabel","newProject","label","handleNewTodoRequest","handleAddTodoRequest","dueDate","priority","editTitle","newTitle","editDescrip","newDescrip","editDueDate","newDueDate","editPriority","newPriority","lastChild","activeProj","handleEditTodoRequest","targetTodoEl","parentNode","console","log","handleUpdateTodoRequest","targetTodoEditForm"],"sourceRoot":""}