{"version":3,"file":"main.js","mappings":"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","sources":["webpack://22_03_31_top_todolist/./src/todo.js","webpack://22_03_31_top_todolist/./src/project.js","webpack://22_03_31_top_todolist/./src/DOMFunctions.js","webpack://22_03_31_top_todolist/./src/controller.js","webpack://22_03_31_top_todolist/./src/index.js"],"sourcesContent":["const Todo = (title, descrip, dueDate, priority) => {\n\n    return{\n        getTitle: () => title,\n        editTitle: newTitle => title = newTitle,\n    \n        getDescrip: () => descrip,\n        editDescrip: newDescrip => descrip = newDescrip,\n    \n        getDueDate: () => dueDate,\n        editDueDate: newDueDate => dueDate = newDueDate,\n    \n        getPriority: () => priority,\n        editPriority: newPriority => priority = newPriority\n    }\n}\n\nexport { Todo }","const Project = (name, todos) => {\n    \n    return {\n        getName: () => name,\n        getTodos: () => todos,\n        addTodo: (newTodo) => todos.push(newTodo)\n    }\n\n}\n\nexport { Project }","function clearHTML(el){\n    while(el.firstChild){\n        el.remove(el.firstChild)\n    }\n}\n\nfunction createNewElement(el, className, textContent){\n    const newEl = document.createElement(el, className)\n    className ? newEl.classList.add(className) : null;\n    textContent ? newEl.textContent = textContent : null;\n\n    return newEl\n}\n\nfunction displayTodo(cont, title, date, descrip){\n    const newTodo = createNewElement('DIV', 'todo');\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n\n    newTodo.append(todoCheckbox, todoTitle, todoDate, todoDescrip, todoHR)\n\n    cont.append(newTodo)\n\n}\n\nfunction displayProjectName(cont, name){\n    const newProject = createNewElement('DIV', 'project');\n    const projectName = createNewElement('H3', 'project-label', name);\n\n    newProject.append(projectName)\n\n    cont.append(newProject)\n\n}\n\nfunction displayProject(project){\n\n}\n\nfunction switchDisplay(el, newDisplay){\n    el.style.display = newDisplay\n}\n\nexport { clearHTML, createNewElement, displayTodo, displayProjectName, switchDisplay }","import { Todo } from './todo'\nimport { Project } from './project'\nimport * as DOM from './DOMFunctions'\n\nconst Controller = (() => {\n\n    const newProjectButton = document.querySelector('.new-project-button');\n    const newProjectForm = document.querySelector('.new-project-form');\n    const addProjectButton = document.querySelector('.add-project-button');\n    const projectsCont = document.querySelector('.projects-cont');\n\n    const newTodoButton = document.querySelector('.new-todo-button');\n    const addTodoButton = document.querySelector('.add-todo-button');\n    const newTodoForm = document.querySelector('.new-todo-form');\n    const todoCont = document.querySelector('.todo-cont');\n\n    const projects = [Project('Inbox', [])]\n\n    return {\n\n\n        handleProjectChangeRequest: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.className === 'project-label'){\n                    const targetLabel = e.target;\n                    console.log(projects)\n\n                }\n            })\n        },\n\n        handleNewProjectRequest: function(){\n            newProjectButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newProjectForm, 'block')\n            })\n        },\n\n        //Here\n\n        handleAddProjectRequest: function(){\n            addProjectButton.addEventListener('click', (e) => {\n\n                let projectName = document.getElementById(\"project-name\");\n\n                if (projectName.value === ''){\n                    alert('Project must have a name')\n                } else {\n                    const newProjectObj = Project(projectName.value, [])\n\n                    DOM.displayProjectName(projectsCont, newProjectObj.getName())\n\n                    projectName.value = '';\n                    DOM.switchDisplay(newProjectForm, 'none')\n\n                    projects.push(newProjectObj)\n                }\n\n            })\n        },\n        \n        handleNewTodoRequest: function(){\n            newTodoButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newTodoForm, 'block')\n            })\n        },\n\n        //Here\n\n        handleAddTodoRequest: function(){\n            addTodoButton.addEventListener('click', (e) => {\n                const todoTitle = document.getElementById(\"todo-title\");\n\n                if(todoTitle.value === ''){\n                    alert('todo must have a title')\n                } else {\n                    const todoDescrip = document.getElementById(\"todo-descrip\");\n                    const todoDate = document.getElementById(\"todo-date\");\n                \n                    const newTodo = Todo(todoTitle.value, todoDescrip.value, todoDate.value, '1')\n                \n                    DOM.displayTodo(todoCont, newTodo.getTitle(), newTodo.getDescrip(), newTodo.getDueDate(), newTodo.getPriority())\n                    DOM.switchDisplay(newTodoForm, 'none')\n                }\n                \n            })\n\n                //todoCont.append(newTodo)\n                newTodoForm.style.display = 'none'\n            \n        }\n\n    }\n\n})();\n\nexport { Controller }","import { Controller } from './controller'\n\nController.handleProjectChangeRequest()\nController.handleNewProjectRequest()\nController.handleAddProjectRequest()\nController.handleNewTodoRequest()\nController.handleAddTodoRequest()"],"names":["Project","name","todos","getName","getTodos","addTodo","newTodo","push","createNewElement","el","className","textContent","newEl","document","createElement","classList","add","switchDisplay","newDisplay","style","display","Controller","newProjectButton","querySelector","newProjectForm","addProjectButton","projectsCont","newTodoButton","addTodoButton","newTodoForm","todoCont","projects","handleProjectChangeRequest","addEventListener","e","target","console","log","handleNewProjectRequest","handleAddProjectRequest","projectName","getElementById","value","alert","newProjectObj","cont","newProject","append","handleNewTodoRequest","handleAddTodoRequest","todoTitle","todoDescrip","todoDate","title","descrip","dueDate","priority","getTitle","editTitle","newTitle","getDescrip","editDescrip","newDescrip","getDueDate","editDueDate","newDueDate","getPriority","editPriority","newPriority","date","todoCheckbox","type","todoHR"],"sourceRoot":""}