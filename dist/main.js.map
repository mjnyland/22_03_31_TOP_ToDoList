{"version":3,"file":"main.js","mappings":"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","sources":["webpack://22_03_31_top_todolist/./src/todo.js","webpack://22_03_31_top_todolist/./src/project.js","webpack://22_03_31_top_todolist/./src/DOMFunctions.js","webpack://22_03_31_top_todolist/./src/controller.js","webpack://22_03_31_top_todolist/./src/index.js"],"sourcesContent":["const Todo = (title, descrip, dueDate, priority) => {\n\n    return{\n        getTitle: () => title,\n        editTitle: newTitle => title = newTitle,\n    \n        getDescrip: () => descrip,\n        editDescrip: newDescrip => descrip = newDescrip,\n    \n        getDueDate: () => dueDate,\n        editDueDate: newDueDate => dueDate = newDueDate,\n    \n        getPriority: () => priority,\n        editPriority: newPriority => priority = newPriority\n    }\n}\n\nexport { Todo }","const Project = (name, todos) => {\n    \n    return {\n        getName: () => name,\n        getTodos: () => todos,\n        addTodo: (newTodo) => todos.push(newTodo)\n    }\n\n}\n\nexport { Project }","function clearHTML(el) {\n    while(el.firstChild) {\n        el.removeChild(el.firstChild)\n    }\n}\n\nfunction createNewElement(el, className, textContent){\n    const newEl = document.createElement(el, className)\n    className ? newEl.classList.add(className) : null;\n    textContent ? newEl.textContent = textContent : null;\n\n    return newEl\n}\n\nfunction displayTodo(cont, title, date, descrip){\n    const newTodo = createNewElement('DIV', 'todo');\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n\n    newTodo.append(todoCheckbox, todoTitle, todoDate, todoDescrip, todoHR)\n\n    cont.append(newTodo)\n\n}\n\nfunction createProjLabel(name){\n    const newProject = createNewElement('DIV', 'project');\n    const projectName = createNewElement('H3', 'project-label', name);\n\n    newProject.append(projectName)\n    newProject.classList.add(name)\n\n    return newProject;\n}\n\nfunction appendProjectLabel(cont, label){\n    cont.append(label)\n}\n\nfunction displayProject(project){\n\n}\n\nfunction switchDisplay(el, newDisplay){\n    el.style.display = newDisplay\n}\n\nexport { clearHTML, createNewElement, displayTodo, appendProjectLabel, switchDisplay, createProjLabel }","import { Todo } from './todo'\nimport { Project } from './project'\nimport * as DOM from './DOMFunctions'\n\nconst Controller = (() => {\n\n    const newProjectButton = document.querySelector('.new-project-button');\n    const newProjectForm = document.querySelector('.new-project-form');\n    const addProjectButton = document.querySelector('.add-project-button');\n    const projectsCont = document.querySelector('.projects-cont');\n    const projectHeading = document.querySelector('.project-heading')\n\n    const newTodoButton = document.querySelector('.new-todo-button');\n    const addTodoButton = document.querySelector('.add-todo-button');\n    const newTodoForm = document.querySelector('.new-todo-form');\n    const todoCont = document.querySelector('.todo-cont');\n\n    const projects = [Project('Inbox', [])]\n    projects[0].DOMElement = projectsCont.children[0];\n    projects[0].DOMElement.classList.add('active')\n\n    return {\n\n\n        handleProjectChangeRequest: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.classList[0] === 'project'){\n\n                    //Switching active project\n                    const activeProj = document.querySelector('.active')\n                    activeProj.classList.remove('active')\n                    const targetLabel = e.target;\n                    targetLabel.classList.add('active')\n\n                    //Finding matching project\n                    projects.forEach((project) => {\n                        if (project.DOMElement === targetLabel) {\n\n                            //Changing headline\n                            projectHeading.textContent = project.getName();\n\n                            //Clearing project's todo cont\n                            DOM.clearHTML(todoCont)\n\n                            //Gathering project's todos\n                            const projectTodos = project.getTodos()\n                            projectTodos.forEach((todo) => {\n                                DOM.displayTodo(todoCont, todo.getTitle(), todo.getDescrip(), todo.getDueDate(), todo.getPriority())\n                            })\n\n                        }\n                    })\n\n                }\n            })\n        },\n\n        handleNewProjectRequest: function(){\n            newProjectButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newProjectForm, 'block')\n            })\n        },\n\n        handleAddProjectRequest: function(){\n            addProjectButton.addEventListener('click', (e) => {\n\n                let projectName = document.getElementById(\"project-name\");\n\n                if (projectName.value === ''){\n                    alert('Project must have a name')\n                } else {\n                    const newProjectObj = Project(projectName.value, [])\n\n                    const projectLabel = DOM.createProjLabel(newProjectObj.getName())\n                    newProjectObj.DOMElement = projectLabel;\n\n                    DOM.appendProjectLabel(projectsCont, newProjectObj.DOMElement)\n\n                    projectName.value = '';\n                    DOM.switchDisplay(newProjectForm, 'none')\n\n                    projects.push(newProjectObj)\n                }\n\n            })\n        },\n        \n        handleNewTodoRequest: function(){\n            newTodoButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newTodoForm, 'block')\n            })\n        },\n\n\n        handleAddTodoRequest: function(){\n            addTodoButton.addEventListener('click', (e) => {\n                const todoTitle = document.getElementById(\"todo-title\");\n\n                if(todoTitle.value === ''){\n                    alert('todo must have a title')\n                } else {\n                    const todoDescrip = document.getElementById(\"todo-descrip\");\n                    const todoDate = document.getElementById(\"todo-date\");\n                \n                    const newTodo = Todo(todoTitle.value, todoDescrip.value, todoDate.value, '1')\n                \n                    DOM.displayTodo(todoCont, newTodo.getTitle(), newTodo.getDescrip(), newTodo.getDueDate(), newTodo.getPriority())\n                    DOM.switchDisplay(newTodoForm, 'none')\n                    const activeProj = document.querySelector('.active')\n\n                    projects.forEach((project) => {\n                        if (project.DOMElement === activeProj){\n                            console.log(project)\n                            project.addTodo(newTodo)\n                        }\n                    })\n                }\n                \n            })\n\n                //todoCont.append(newTodo)\n                newTodoForm.style.display = 'none'\n            \n        }\n\n    }\n\n})();\n\nexport { Controller }","import { Controller } from './controller'\n\nController.handleProjectChangeRequest()\nController.handleNewProjectRequest()\nController.handleAddProjectRequest()\nController.handleNewTodoRequest()\nController.handleAddTodoRequest()"],"names":["Project","name","todos","getName","getTodos","addTodo","newTodo","push","createNewElement","el","className","textContent","newEl","document","createElement","classList","add","displayTodo","cont","title","date","descrip","todoCheckbox","type","todoTitle","todoDate","todoDescrip","todoHR","append","switchDisplay","newDisplay","style","display","Controller","newProjectButton","querySelector","newProjectForm","addProjectButton","projectsCont","projectHeading","newTodoButton","addTodoButton","newTodoForm","todoCont","projects","DOMElement","children","handleProjectChangeRequest","addEventListener","e","target","remove","targetLabel","forEach","project","firstChild","removeChild","todo","getTitle","getDescrip","getDueDate","getPriority","handleNewProjectRequest","handleAddProjectRequest","projectName","getElementById","value","alert","newProjectObj","projectLabel","newProject","label","handleNewTodoRequest","handleAddTodoRequest","dueDate","priority","editTitle","newTitle","editDescrip","newDescrip","editDueDate","newDueDate","editPriority","newPriority","activeProj","console","log"],"sourceRoot":""}