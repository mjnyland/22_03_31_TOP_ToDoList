{"version":3,"file":"main.js","mappings":"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","sources":["webpack://22_03_31_top_todolist/./src/project.js","webpack://22_03_31_top_todolist/./src/DOMFunctions.js","webpack://22_03_31_top_todolist/./src/controller.js","webpack://22_03_31_top_todolist/./src/index.js"],"sourcesContent":["const Project = (name, todos) => {\n    return {\n        addTodo: function(title, descrip, date, priority){\n            const todo = {\n                id: todos.length > 0 ? todos[todos.length - 1].id +1 : 1,\n                title,\n                descrip,\n                date,\n                priority,\n                complete: false\n            }\n            todos.push(todo)\n        },\n\n        editTodo: function(id, newTitle, newDescrip, newDate, newPriority){\n            todos = todos.map((todo) => {\n                    if (todo.id === id){\n                        todo.id = id;\n                        todo.title = newTitle;\n                        todo.descrip = newDescrip;\n                        todo.date = newDate;\n                        todo.priority = newPriority;\n                        return todo\n                    } else {\n                        return todo\n                    }\n            })\n        },\n\n        getTodos: function(){\n            return todos\n        },\n\n        deleteTodo: function(id) {\n            todos = todos.filter((todo) => todo.id !== id)\n        },\n\n        toggleTodo: function(id){\n            todos = todos.map((todo) => {\n                todo.id === id ? todo.complete = !todo.complete : todo\n            })\n        },\n        todos,\n        name\n    }\n}\n\n/*\nconst testProj = Project('name', [])\ntestProj.addTodo('title', 'descrip', '04/04/22', 1)\ntestProj.editTodo(1, 'new title', 'new descrip', 'new date', 2)\n\n*/\n\nexport { Project }","import { de } from \"date-fns/locale\";\n\nfunction clearHTML(el) {\n    while(el.firstChild) {\n        el.removeChild(el.firstChild)\n    }\n}\n\nfunction createNewElement(el, className, textContent){\n    const newEl = document.createElement(el, className)\n    className ? newEl.classList.add(className) : null;\n    textContent ? newEl.textContent = textContent : null;\n\n    return newEl\n}\n\nfunction displayTodos(proj){\n    const todosCont = document.querySelector('.todos-cont');\n\n    const deleteProjLink = document.querySelector('.projects-delete-link');\n    proj.id === 0 ? deleteProjLink.style.display = 'none' : deleteProjLink.style.display = 'block';\n\n    if(proj.getTodos().length > 0){\n        proj.getTodos().forEach((todo) => {\n            displayTodo(todosCont, todo.id, todo.title, todo.date, todo.descrip)\n        })\n    }\n}\n\nfunction displayTodo(cont, id, title, date, descrip){\n    const newTodo = createNewElement('DIV', 'todo');\n    newTodo.classList.add(id)\n\n    //Info\n    const todoInfoCont = createNewElement('DIV', 'todo-info-cont');\n\n    const checkBoxCont = createNewElement('DIV', 'checkbox-container');\n    const todoCheckboxChecked = createNewElement('SPAN', 'todo-checkbox-checked');\n    const todoCheckbox = createNewElement('SPAN', 'todo-checkbox');\n    checkBoxCont.append(todoCheckboxChecked, todoCheckbox)\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const amendTodoCont = createNewElement('DIV', 'amend-todo-cont');\n    const deleteLink = createNewElement('H5', 'delete-todo-link', 'Delete todo');\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo');\n    amendTodoCont.append(editLink, deleteLink)\n\n    todoInfoCont.append(checkBoxCont, todoTitle, todoDate, todoDescrip, amendTodoCont)\n\n    //Edit Form\n    const todoEditFormCont = createNewElement('DIV', 'todo-edit-form-cont');\n\n    const editTitleInput = createNewElement('INPUT', 'edit-title-input');\n    editTitleInput.id = 'edit-todo-title';\n    editTitleInput.setAttribute('type', 'text');\n\n    const editTitleLabel = createNewElement('LABEL', 'edit-title-label');\n    editTitleLabel.htmlFor = 'edit-todo-title';\n    editTitleLabel.textContent = 'Title:'\n\n    const editDescripInput = createNewElement('INPUT', 'edit-descrip-input');\n    editDescripInput.id = 'edit-todo-descrip';\n    editDescripInput.setAttribute('type', 'text');\n\n    const editDescripLabel = createNewElement('LABEL', 'edit-descrip-label');\n    editDescripLabel.htmlFor = 'edit-todo-description';\n    editDescripLabel.textContent = 'Description:';\n\n    const editDateInput = createNewElement('INPUT', 'edit-date-input');\n    editDateInput.id = 'edit-todo-date';\n    editDateInput.setAttribute('type', 'date');\n\n    const editDateLabel = createNewElement('LABEL', 'edit-date-label');\n    editDateLabel.htmlFor = 'edit-todo-date';\n    editDateLabel.textContent = 'Date:';\n\n    const editTodoFormButton = createNewElement('BUTTON', 'edit-todo-form-button', 'Update Todo')\n\n    todoEditFormCont.append(editTitleLabel, editTitleInput, editDescripLabel, editDescripInput, editDateLabel, editDateInput, editTodoFormButton);\n\n    //HR\n    const todoHR = createNewElement('HR', 'todo-hr')\n\n    //Assembling todo\n    newTodo.append(todoInfoCont, todoEditFormCont, todoHR)\n\n    cont.append(newTodo)\n\n}\n\nfunction updateTodo(todoCont, title, date, descrip){\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo')\n    todoCont.append(todoCheckbox, todoTitle, todoDate, todoDescrip, editLink, todoHR)\n}\n\nfunction switchActive(currActive, newActive){\n    currActive.classList.remove('active');\n    newActive.classList.add('active');\n}\n\nfunction displayProjLabel(name, id){\n    const projectsCont = document.querySelector('.projects-cont');\n    const newProject = createNewElement('DIV', 'project');\n    const projectName = createNewElement('H3', 'project-label', name);\n    newProject.classList.add(id)\n\n    newProject.append(projectName)\n\n    projectsCont.append(newProject)\n}\n\nfunction appendProjectLabel(cont, label){\n    cont.append(label)\n}\n\nfunction switchDisplay(el, newDisplay){\n    el.style.display = newDisplay\n}\n\nfunction populateEditForm(form, todo){\n    form.children[1].value = todo.children[1].textContent; //title\n    form.children[3].value = todo.children[3].textContent; //descrip\n    form.children[5].value = todo.children[2].textContent;  //date\n}\n\nfunction clearFormData(form){\n    for (const child of form.children){\n        child.nodeName === 'INPUT' ? child.value = '' : null;\n    }\n}\n\nfunction resetLocalStorage(projects){\n    //clear existing storage\n    localStorage.clear();\n\n    //create obj to store projects in\n    const storedProjects = {\n        stored: []\n    }\n    \n    //for every project store an obj with name, id, and todos\n    for (const project of projects){\n        const storedData = (name, id, todos) => { \n            const obj = {name, id, todos} \n            return obj\n        };\n        storedProjects.stored.push(storedData(project.name, project.id, project.getTodos()))\n    }\n\n    //set local storage items\n    localStorage.setItem(`projects`, JSON.stringify(storedProjects))\n    localStorage.setItem(`active`, document.querySelector('.active').classList[1]);\n}\n\nfunction switchCheckbox(box){\n    box.style.backgroundColor = '#FFF';\n}\n\n\nexport { clearHTML, createNewElement, displayTodo, updateTodo, appendProjectLabel, switchDisplay, displayProjLabel, switchActive, displayTodos, populateEditForm, clearFormData, resetLocalStorage }","import { Todo } from './todo'\nimport { Project } from './project'\nimport * as DOM from './DOMFunctions'\n\nconst Controller = (() => {\n\n    const newProjectButton = document.querySelector('.new-project-button-cont');\n    const newProjectForm = document.querySelector('.new-project-form');\n    const addProjectButton = document.querySelector('.add-project-button');\n    const projectsCont = document.querySelector('.projects-cont');\n    const todosCont = document.querySelector('.todos-cont');\n    const projectHeading = document.querySelector('.project-heading');\n\n    const newTodoButton = document.querySelector('.new-todo-button-cont');\n    const newTodoForm = document.querySelector('.new-todo-form');\n    const editTodoForm = document.querySelector('.todo-edit-form')\n\n    let projects = []\n\n    return {\n\n        findMatchProj: function(elementID){\n            const int = parseInt(elementID);\n            for (const project of projects){\n                if (project.id === int){\n                    return project\n                }\n            }\n        },\n\n        loadTodos: function(cont, obj, arr){\n            DOM.clearHTML(cont)\n            DOM.displayTodos(obj)\n            DOM.resetLocalStorage(arr)  \n        },\n\n        handlePageLoad: function(){\n\n            //check local storage\n            if(localStorage.length > 0){\n\n                const storedData = JSON.parse(localStorage.getItem('projects'));\n\n                //for each stored project\n                storedData.stored.forEach(project => {\n\n                    //create a new project\n                    const loadedProject = Project(project.name, project.todos);\n                    loadedProject.id = project.id;\n\n                    //add to projects array\n                    projects.push(loadedProject);\n\n                    //display project label\n                    DOM.displayProjLabel(loadedProject.name, loadedProject.id);\n                })\n\n                //grab active id from storage and grab matching project obj\n                const activeId = parseInt(localStorage.getItem('active'));\n                const activeObj = this.findMatchProj(activeId);\n\n                //display active obj\n                projectsCont.children[activeId].classList.add('active');\n                projectHeading.textContent = activeObj.name;\n                DOM.displayTodos(activeObj);\n\n            } else {\n                //create inbox and display it\n                projects = [Project('Inbox', [])];\n                projects[0].id = 0;\n                DOM.displayProjLabel(projects[0].name, projects[0].id);\n                document.querySelector('.project').classList.add('active');\n            }\n        },\n\n        handleNewProjectRequest: function(){\n            newProjectButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newProjectForm, 'grid')\n            })\n        },\n\n        handleAddProjectRequest: function(){\n            addProjectButton.addEventListener('click', (e) => {\n                const projectName = document.getElementById(\"project-name\");\n\n                if (projectName.value === ''){\n                    alert('Project must have a name')\n                } else {\n                    const newProjectObj = Project(projectName.value, [])\n                    projects.push(newProjectObj);\n                    newProjectObj.id = projects.length - 1;\n\n                    DOM.switchDisplay(newProjectForm, 'none');\n                    DOM.displayProjLabel(projectName.value, newProjectObj.id);\n                    DOM.resetLocalStorage(projects)\n                }\n            })\n        },\n\n        handleProjectChangeRequest: function(){\n            document.addEventListener('click', (e) => {\n                console.log(e.target)\n                if(e.target.classList[0] === 'project'){\n\n                    //Switching active class\n                    const currActive = document.querySelector('.active');\n                    DOM.switchActive(currActive, e.target);\n\n                    //Matching target with obj\n                    const proj = this.findMatchProj(e.target.classList[1])\n\n                    //Displaying obj\n                    projectHeading.textContent = proj.name;\n                    this.loadTodos(todosCont, proj, projects)\n                }\n            })\n        },\n        \n        handleNewTodoRequest: function(){\n            newTodoButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newTodoForm, 'grid')\n            })\n        },\n\n\n        handleAddTodoRequest: function(proj){\n            const addTodoButton = document.querySelector('.add-todo-button');\n            addTodoButton.addEventListener('click', (e) => {\n                //Hiding form\n                DOM.switchDisplay(newTodoForm, 'none');\n\n                //Gathering data\n                const todoTitle = document.getElementById('todo-title').value;\n                const todoDescrip = document.getElementById('todo-descrip').value;\n                const todoDate = document.getElementById('todo-date').value;\n\n                if(todoTitle){\n                    //Getting project and adding todo to project\n                    const currActive = document.querySelector('.active');\n                    const proj = this.findMatchProj(currActive.classList[1]);\n                    proj.addTodo(todoTitle, todoDescrip, todoDate, 1);\n\n                    this.loadTodos(todosCont, proj, projects);\n                    DOM.clearFormData(newTodoForm);\n                } else{\n                    alert('todo must have a title :)')\n                }\n            })\n        },\n\n        handleEditTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'edit-todo-link'){\n\n                    const todoInfoCont = e.target.parentNode.parentNode;\n                    const todoCont = todoInfoCont.parentNode;\n                    const editTodoForm = todoCont.children[1];\n\n                    DOM.populateEditForm(editTodoForm, todoInfoCont);\n                    DOM.switchDisplay(todoInfoCont, 'none');\n                    DOM.switchDisplay(editTodoForm, 'grid');      \n                    \n                } \n            })\n        },\n\n        handleUpdateTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'edit-todo-form-button'){\n\n                    //Orienting the DOM\n                    const editTodoForm = e.target.parentNode;\n                    const todoCont = editTodoForm.parentNode;\n\n                    //Selecting active project obj\n                    let activeProj = document.querySelector('.active');\n                    let projObj = this.findMatchProj(activeProj.classList[1])\n\n                    //Find Todo and update it with form data\n                    projObj.editTodo(parseInt(todoCont.classList[1]), editTodoForm.children[1].value, editTodoForm.children[3].value, editTodoForm.children[5].value)\n\n                    //Turning form off\n                    DOM.switchDisplay(editTodoForm, 'none');\n\n                    this.loadTodos(todosCont, projObj, projects);\n                }\n            })\n        },\n\n        handleDeleteTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.className === 'delete-todo-link' || e.target.className === 'todo-checkbox'){\n\n                    //find match obj and todo\n                    const currActive = document.querySelector('.active');\n                    const proj = this.findMatchProj(currActive.classList[1]);\n                    const targetTodoId = parseInt(e.target.parentNode.parentNode.parentNode.classList[1]);\n\n                    //remove todo obj from project\n                    proj.deleteTodo(targetTodoId);\n\n                    //display project\n\n                    this.loadTodos(todosCont, proj, projects)\n\n                }\n            })\n        },\n        /*\n\n        handleCheckboxClick: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.className === 'todo-checkbox'){\n                     //find match obj and todo\n                     const currActive = document.querySelector('.active');\n                     const proj = this.findMatchProj(currActive.classList[1]);\n                     const targetTodoId = parseInt(e.target.parentNode.parentNode.parentNode.classList[1]);\n \n                     //remove todo obj from project\n                     proj.deleteTodo(targetTodoId);\n \n                     //display project\n \n                     this.loadTodos(todosCont, proj, projects)\n                }\n            })\n        },\n        */\n\n        handleProjectDelete: function(){\n            document.addEventListener('click', (e) => {\n                if(e.target.className === 'projects-delete-link'){\n\n                    //find active obj\n                    const currActive = document.querySelector('.active');\n                    const proj = this.findMatchProj(currActive.classList[1]);\n\n                    //remove obj from projects\n                    projects = projects.filter(project => project.id !== proj.id);\n\n                    //call load todos on next project\n                    DOM.switchActive(document.querySelector('.active'), projectsCont.children[0])\n                    projectHeading.textContent = projects[0].name;\n                    this.loadTodos(todosCont, projects[0], projects);\n\n                    projectsCont.children[proj.id].remove();\n                }\n            }) \n        },\n\n        instantiateWebsite: function(){\n            Controller.handlePageLoad()\n            Controller.handleProjectChangeRequest()\n            Controller.handleNewProjectRequest()\n            Controller.handleAddProjectRequest()\n            Controller.handleNewTodoRequest()\n            Controller.handleAddTodoRequest()\n            Controller.handleEditTodoRequest()\n            Controller.handleUpdateTodoRequest()\n            Controller.handleDeleteTodoRequest()\n            //Controller.handleCheckboxClick(),\n            Controller.handleProjectDelete()\n        }\n\n\n    }\n})();\n\nexport { Controller }","import { Controller } from './controller'\n\nController.instantiateWebsite()"],"names":["Project","name","todos","addTodo","title","descrip","date","priority","todo","id","length","complete","push","editTodo","newTitle","newDescrip","newDate","newPriority","map","getTodos","deleteTodo","filter","toggleTodo","createNewElement","el","className","textContent","newEl","document","createElement","classList","add","displayTodos","proj","todosCont","querySelector","deleteProjLink","style","display","forEach","cont","newTodo","todoInfoCont","checkBoxCont","todoCheckboxChecked","todoCheckbox","append","todoTitle","todoDate","todoDescrip","amendTodoCont","deleteLink","editLink","todoEditFormCont","editTitleInput","setAttribute","editTitleLabel","htmlFor","editDescripInput","editDescripLabel","editDateInput","editDateLabel","editTodoFormButton","todoHR","displayTodo","switchActive","currActive","newActive","remove","displayProjLabel","projectsCont","newProject","projectName","switchDisplay","newDisplay","resetLocalStorage","projects","localStorage","clear","storedProjects","stored","project","storedData","setItem","JSON","stringify","Controller","newProjectButton","newProjectForm","addProjectButton","projectHeading","newTodoButton","newTodoForm","findMatchProj","elementID","int","parseInt","loadTodos","obj","arr","firstChild","removeChild","handlePageLoad","parse","getItem","loadedProject","activeId","activeObj","this","children","handleNewProjectRequest","addEventListener","e","handleAddProjectRequest","getElementById","value","alert","newProjectObj","handleProjectChangeRequest","console","log","target","handleNewTodoRequest","handleAddTodoRequest","form","child","nodeName","handleEditTodoRequest","parentNode","editTodoForm","handleUpdateTodoRequest","todoCont","activeProj","projObj","handleDeleteTodoRequest","targetTodoId","handleProjectDelete","instantiateWebsite"],"sourceRoot":""}