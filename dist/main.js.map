{"version":3,"file":"main.js","mappings":"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","sources":["webpack://22_03_31_top_todolist/./src/project.js","webpack://22_03_31_top_todolist/./src/DOMFunctions.js","webpack://22_03_31_top_todolist/./src/controller.js","webpack://22_03_31_top_todolist/./src/index.js"],"sourcesContent":["const Project = (name, todos) => {\n    return {\n        addTodo: function(title, descrip, date, priority){\n            const todo = {\n                id: todos.length > 0 ? todos[todos.length - 1].id +1 : 1,\n                title,\n                descrip,\n                date,\n                priority,\n                complete: false\n            }\n            todos.push(todo)\n        },\n\n        editTodo: function(id, newTitle, newDescrip, newDate, newPriority){\n            todos = todos.map((todo) => {\n                    if (todo.id === id){\n                        todo.id = id;\n                        todo.title = newTitle;\n                        todo.descrip = newDescrip;\n                        todo.date = newDate;\n                        todo.priority = newPriority;\n                        return todo\n                    } else {\n                        return todo\n                    }\n            })\n        },\n\n        getTodos: function(){\n            return todos\n        },\n\n        deleteTodo: function(id) {\n            todos = todos.filter((todo) => todo.id !== id)\n        },\n\n        toggleTodo: function(id){\n            todos = todos.map((todo) => {\n                todo.id === id ? todo.complete = !todo.complete : todo\n            })\n        },\n\n        todos,\n        name\n    }\n}\n\n/*\nconst testProj = Project('name', [])\ntestProj.addTodo('title', 'descrip', '04/04/22', 1)\ntestProj.editTodo(1, 'new title', 'new descrip', 'new date', 2)\n\n*/\n\nexport { Project }","function clearHTML(el) {\n    while(el.firstChild) {\n        el.removeChild(el.firstChild)\n    }\n}\n\nfunction createNewElement(el, className, textContent){\n    const newEl = document.createElement(el, className)\n    className ? newEl.classList.add(className) : null;\n    textContent ? newEl.textContent = textContent : null;\n\n    return newEl\n}\n\nfunction displayTodos(proj){\n    const todosCont = document.querySelector('.todos-cont');\n    proj.getTodos().forEach((todo) => {\n        displayTodo(todosCont, todo.id, todo.title, todo.date, todo.descrip)\n    })\n}\n\nfunction displayTodo(cont, id, title, date, descrip){\n    const newTodo = createNewElement('DIV', 'todo');\n    newTodo.classList.add(id)\n\n    //Info\n    const todoInfoCont = createNewElement('DIV', 'todo-info-cont');\n\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo')\n\n    todoInfoCont.append(todoCheckbox, todoTitle, todoDate, todoDescrip, editLink)\n\n    //Edit Form\n    const todoEditFormCont = createNewElement('DIV', 'todo-edit-form-cont');\n\n    const editTitleInput = createNewElement('INPUT', 'edit-title-input');\n    editTitleInput.id = 'edit-todo-title';\n    editTitleInput.setAttribute('type', 'text');\n\n    const editTitleLabel = createNewElement('LABEL', 'edit-title-label');\n    editTitleLabel.htmlFor = 'edit-todo-title';\n    editTitleLabel.textContent = 'Title:'\n\n    const editDescripInput = createNewElement('INPUT', 'edit-descrip-input');\n    editDescripInput.id = 'edit-todo-descrip';\n    editDescripInput.setAttribute('type', 'text');\n\n    const editDescripLabel = createNewElement('LABEL', 'edit-descrip-label');\n    editDescripLabel.htmlFor = 'edit-todo-description';\n    editDescripLabel.textContent = 'Description:';\n\n    const editDateInput = createNewElement('INPUT', 'edit-date-input');\n    editDateInput.id = 'edit-todo-date';\n    editDateInput.setAttribute('type', 'text');\n\n    const editDateLabel = createNewElement('LABEL', 'edit-date-label');\n    editDateLabel.htmlFor = 'edit-todo-date';\n    editDateLabel.textContent = 'Date:';\n\n    const editTodoFormButton = createNewElement('BUTTON', 'edit-todo-form-button', 'Update Todo')\n\n    todoEditFormCont.append(editTitleLabel, editTitleInput, editDescripLabel, editDescripInput, editDateLabel, editDateInput, editTodoFormButton);\n\n    //HR\n    const todoHR = createNewElement('HR', 'todo-hr')\n\n    //Assembling todo\n    newTodo.append(todoInfoCont, todoEditFormCont, todoHR)\n\n    cont.append(newTodo)\n\n}\n\nfunction updateTodo(todoCont, title, date, descrip){\n    console.log('Updating todo')\n    const todoCheckbox = createNewElement('INPUT', 'todo-checkbox');\n    todoCheckbox.type = \"checkbox\"\n    const todoTitle = createNewElement('H3', 'todo-title', title);\n    const todoDate = createNewElement('H4', 'todo-date', date);\n    const todoDescrip = createNewElement('P', 'todo-descrip', descrip);\n    const todoHR = createNewElement('HR', 'todo-hr')\n    const editLink = createNewElement('H5', 'edit-todo-link', 'Edit todo')\n    todoCont.append(todoCheckbox, todoTitle, todoDate, todoDescrip, editLink, todoHR)\n}\n\nfunction switchActive(currActive, newActive){\n    currActive.classList.remove('active');\n    newActive.classList.add('active');\n}\n\nfunction displayProjLabel(name, id){\n    const projectsCont = document.querySelector('.projects-cont');\n    const newProject = createNewElement('DIV', 'project');\n    const projectName = createNewElement('H3', 'project-label', name);\n    newProject.classList.add(id)\n\n    newProject.append(projectName)\n\n    projectsCont.append(newProject)\n}\n\nfunction appendProjectLabel(cont, label){\n    cont.append(label)\n}\n\nfunction switchDisplay(el, newDisplay){\n    el.style.display = newDisplay\n}\n\nfunction populateEditForm(form, todo){\n    form.children[1].value = todo.children[1].textContent; //title\n    form.children[3].value = todo.children[3].textContent; //descrip\n    form.children[5].value = todo.children[2].textContent;  //date\n}\n\nfunction clearFormData(form){\n    for (const child of form.children){\n        child.nodeName === 'INPUT' ? child.value = '' : null;\n    }\n}\n\nexport { clearHTML, createNewElement, displayTodo, updateTodo, appendProjectLabel, switchDisplay, displayProjLabel, switchActive, displayTodos, populateEditForm, clearFormData }","import { Todo } from './todo'\nimport { Project } from './project'\nimport * as DOM from './DOMFunctions'\n\nconst Controller = (() => {\n\n    const newProjectButton = document.querySelector('.new-project-button');\n    const newProjectForm = document.querySelector('.new-project-form');\n    const addProjectButton = document.querySelector('.add-project-button');\n    const projectsCont = document.querySelector('.projects-cont');\n    const todosCont = document.querySelector('.todos-cont');\n\n    const newTodoButton = document.querySelector('.new-todo-button');\n    const newTodoForm = document.querySelector('.new-todo-form');\n    const editTodoForm = document.querySelector('.todo-edit-form')\n\n    const projects = [Project('Inbox', [])]\n    projectsCont.children[0].classList.add('0')\n    projectsCont.children[0].classList.add('active');\n    projects[0].id = 0;\n\n    return {\n\n        findMatchProj: function(elementID){\n            const int = parseInt(elementID);\n            for (const project of projects){\n                if (project.id === int){\n                    return project\n                }\n            }\n        },\n\n        handleNewProjectRequest: function(){\n            newProjectButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newProjectForm, 'block')\n            })\n        },\n\n        handleAddProjectRequest: function(){\n            addProjectButton.addEventListener('click', (e) => {\n\n                let projectName = document.getElementById(\"project-name\");\n\n                if (projectName.value === ''){\n                    alert('Project must have a name')\n                } else {\n                    const newProjectObj = Project(projectName.value, [])\n                    projects.push(newProjectObj);\n                    newProjectObj.id = projects.length - 1;\n                    DOM.switchDisplay(newProjectForm, 'none');\n                    DOM.displayProjLabel(projectName.value, projects.length - 1);\n                }\n            })\n        },\n\n        handleProjectChangeRequest: function(){\n            const projectHeading = document.querySelector('.project-heading');\n            document.addEventListener('click', (e) => {\n                if(e.target.classList[0] === 'project'){\n                    //Switching active class\n                    const currActive = document.querySelector('.active');\n                    DOM.switchActive(currActive, e.target);\n                    //Matching target with obj\n                    const proj = this.findMatchProj(e.target.classList[1])\n                    //Displaying obj\n                    projectHeading.textContent = proj.name;\n                    DOM.clearHTML(todosCont)\n                    DOM.displayTodos(proj)\n                }\n            })\n        },\n        \n        handleNewTodoRequest: function(){\n            newTodoButton.addEventListener('click', (e) => {\n                DOM.switchDisplay(newTodoForm, 'block')\n            })\n        },\n\n\n        handleAddTodoRequest: function(proj){\n            const addTodoButton = document.querySelector('.add-todo-button');\n            addTodoButton.addEventListener('click', (e) => {\n                //Hiding form\n                DOM.switchDisplay(newTodoForm, 'none');\n\n                //Gathering data\n                const todoTitle = document.getElementById('todo-title').value;\n                const todoDescrip = document.getElementById('todo-descrip').value;\n                const todoDate = document.getElementById('todo-date').value;\n                \n                //Getting project and adding todo to project\n                const currActive = document.querySelector('.active');\n                const proj = this.findMatchProj(currActive.classList[1])\n                proj.addTodo(todoTitle, todoDescrip, todoDate, 1)\n                console.log(proj.todos)\n                DOM.clearHTML(todosCont)\n                DOM.displayTodos(proj)\n                DOM.clearFormData(newTodoForm)\n            })\n            //Selecting form elements\n        },\n\n        handleEditTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'edit-todo-link'){\n\n                    const todoInfoCont = e.target.parentNode;\n                    const todoCont = todoInfoCont.parentNode;\n                    const editTodoForm = todoCont.children[1];\n\n                    DOM.populateEditForm(editTodoForm, todoInfoCont);\n                    DOM.switchDisplay(todoInfoCont, 'none');\n                    DOM.switchDisplay(editTodoForm, 'block');      \n                    \n                } \n            })\n        },\n\n        handleUpdateTodoRequest: function(){\n            document.addEventListener('click', (e) => {\n                if (e.target.className === 'edit-todo-form-button'){\n\n                    //Orienting the DOM\n\n                    const editTodoForm = e.target.parentNode;\n                    const todoCont = editTodoForm.parentNode;\n                    const todoInfoCont = todoCont.children[0];\n\n                    //Selecting active project obj\n                    let activeProj = document.querySelector('.active');\n                    let projObj = this.findMatchProj(activeProj.classList[1])\n                    //Find Todo and update it with form data\n                    projObj.editTodo(parseInt(todoCont.classList[1]), editTodoForm.children[1].value, editTodoForm.children[3].value, editTodoForm.children[5].value)\n\n                    \n                    //Turning form off\n\n                    DOM.switchDisplay(editTodoForm, 'none');\n                    DOM.clearHTML(todosCont);\n                    DOM.displayTodos(projObj);\n                } \n            })\n        }\n\n\n    }\n})();\n\nexport { Controller }","import { Controller } from './controller'\n\nController.handleProjectChangeRequest()\nController.handleNewProjectRequest()\nController.handleAddProjectRequest()\nController.handleNewTodoRequest()\nController.handleAddTodoRequest()\nController.handleEditTodoRequest()\nController.handleUpdateTodoRequest()"],"names":["Project","name","todos","addTodo","title","descrip","date","priority","todo","id","length","complete","push","editTodo","newTitle","newDescrip","newDate","newPriority","map","getTodos","deleteTodo","filter","toggleTodo","clearHTML","el","firstChild","removeChild","createNewElement","className","textContent","newEl","document","createElement","classList","add","displayTodos","proj","todosCont","querySelector","forEach","cont","newTodo","todoInfoCont","todoCheckbox","type","todoTitle","todoDate","todoDescrip","editLink","append","todoEditFormCont","editTitleInput","setAttribute","editTitleLabel","htmlFor","editDescripInput","editDescripLabel","editDateInput","editDateLabel","editTodoFormButton","todoHR","displayTodo","switchDisplay","newDisplay","style","display","Controller","newProjectButton","newProjectForm","addProjectButton","projectsCont","newTodoButton","newTodoForm","projects","children","findMatchProj","elementID","int","parseInt","project","handleNewProjectRequest","addEventListener","e","handleAddProjectRequest","projectName","getElementById","value","alert","newProjectObj","newProject","handleProjectChangeRequest","projectHeading","target","currActive","newActive","remove","this","handleNewTodoRequest","handleAddTodoRequest","console","log","form","child","nodeName","handleEditTodoRequest","parentNode","editTodoForm","handleUpdateTodoRequest","todoCont","activeProj","projObj"],"sourceRoot":""}